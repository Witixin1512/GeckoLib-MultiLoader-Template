subprojects {

    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : project.jar.archiveVersion,
                    'Implementation-Title'    : project.name,
                    'Implementation-Version'  : project.jar.archiveVersion,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestampe'              : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        maven {
            name 'Quilt (Release)'
            url 'https://maven.quiltmc.org/repository/release/'
        }


        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven { url "https://maven.architectury.dev/" }
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }

    task assembleSubProjects() {
                var props = rootProject.getProperties()
                var fileName = "${props.get("mod_name")}-${project.getName().toLowerCase()}-${minecraft_version}-${props.get("version")}.jar"
                var sourceFileName = "${props.get("mod_name")}-${project.getName().toLowerCase()}-${minecraft_version}-${props.get("version")}-sources.jar"
                project.file("build/libs/${fileName}").renameTo(rootProject.file("buildOutput/${fileName}"))
                project.file("build/libs/${sourceFileName}").renameTo(rootProject.file("buildOutput/${sourceFileName}"))
            }

    }



task assembleSubProjects(){
    doFirst {
        subprojects.forEach(subProject -> {
            var props = rootProject.getProperties()
            var fileName = "${props.get("mod_name")}-${subProject.getName().toLowerCase()}-${minecraft_version}-${props.get("version")}.jar"
            var sourceFileName = "${props.get("mod_name")}-${subProject.getName().toLowerCase()}-${minecraft_version}-${props.get("version")}-sources.jar"
            subProject.file("build/libs/${fileName}").renameTo(rootProject.file("buildOutput/${fileName}"))
            subProject.file("build/libs/${sourceFileName}").renameTo(rootProject.file("buildOutput/${sourceFileName}"))
        })
    }

}